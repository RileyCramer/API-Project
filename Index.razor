@page "/"

<PageTitle>Index</PageTitle>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    
        <header>
            <nav>
                <ul>
                    <li><a href="#">Home</a></li>
                    <li><a href="/data">Character Creator</a></li>
                    <li><a href="/MonsterInfo">Monsters</a></li>
                    <li><a href="/rules">Rules</a></li>
                    <li><a href="/randomitem">Presets</a></li>
                </ul>
            </nav>
        </header>

        <main>
            <section class="hero">
                <h1>Dragons And Dungeons</h1>
                <p>Explore this world full of dragons and of course dungeons.</p>
                <a href="#" class="cta-button">Get Started</a>
            </section>

            <section class="features">
                <div class="feature">
                    <h2>All About Monsters</h2>
                    <p>Expand Your Knowledge.</p>
                </div>
                <div class="feature">
                    <h2>Rules & Regulations</h2>
                    <p>Strategize a Plan.</p>
                </div>
                <div class="feature">
                    <h2>Character Creation</h2>
                    <p>Show Some Creativity.</p>
                </div>
            </section>
            <hr />
            <section class="features">
            <div class="feature">
                <h2>Whats the Monster of the day?</h2>
                <button @onclick="FetchRandomItem">Click Me</button>
                <p>@RandomItemText</p>
            </div>
            <div class="feature">
                <h2>Dice Roller</h2>

                <div>
                    <label>Select a type of dice:</label>
                    <select @bind="selectedDice">
                        <option value="4">d4</option>
                        <option value="6">d6</option>
                        <option value="8">d8</option>
                        <option value="10">d10</option>
                        <option value="12">d12</option>
                        <option value="20">d20</option>
                    </select>
                </div>

                <div>
                    <button @onclick="RollDice">Roll the @selectedDice</button>
                </div>

                @if (diceResult != null)
                {
                    <div>
                        <p>You rolled @diceResult</p>
                    </div>
                }
            </div>
            </section>
        </main>

        <footer>
            <p>&copy; 2023 Micah&Riley Web Page</p>
        </footer>
    
</body>
</html>



@code {
    private int selectedDice = 6; // Default to d6
    private int? diceResult;

    private void RollDice()
    {
        Random random = new Random();
        diceResult = random.Next(1, selectedDice + 1); // Generate a random number from 1 to selectedDice
    }
}



@code {

    private List<RandMonsterModel> Monsters { get; set; } = new List<RandMonsterModel>();
    private readonly Random random = new Random();
    private string RandomItemText { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Monsters = await FetchMonstersFromApi();
    }

    private void FetchRandomItem()
    {
        if (Monsters != null && Monsters.Count > 0)
        {
            int randomIndex = random.Next(0, Monsters.Count);
            RandomItemText = "Monster of the Day: " + Monsters.ElementAt(randomIndex).name;
        }
        else
        {
            RandomItemText = "No monsters available.";
        }
    }

    private async Task<List<RandMonsterModel>> FetchMonstersFromApi()
    {
        try
        {
            HttpClient httpClient = new HttpClient();
            var response = await httpClient.GetAsync("https://www.dnd5eapi.co/api/monsters/"); // Replace with your API endpoint

            if (response.IsSuccessStatusCode)
            {
                var content = await response.Content.ReadAsStringAsync();
                var apiResponse = System.Text.Json.JsonSerializer.Deserialize<RandApiResponseModel>(content);

                return apiResponse?.results.Select(result => new RandMonsterModel
                    {
                        index = result.index,
                        name = result.name
                    }).ToList() ?? new List<RandMonsterModel>();
            }
            else
            {
                // Handle unsuccessful response
                return new List<RandMonsterModel>();
            }
        }
        catch (Exception ex)
        {
            // Handle exceptions
            return new List<RandMonsterModel>();
        }
    }

    public class RandApiResponseModel
    {
        public int Count { get; set; }
        public List<RandMonsterResultModel> results { get; set; }
    }

    public class RandMonsterResultModel
    {
        public string index { get; set; }
        public string name { get; set; }
        public string url { get; set; }
    }

    public class RandMonsterModel
    {
        public string index { get; set; }
        public string name { get; set; }
    }

        

    

}
